/SquadGame.target"
    "./Squad/Binaries/Win64/SquadGameEditor.target"
    "./Squad/Binaries/Win64/steam_appid.txt"
    "./Squad/Binaries/Win64/UE4Editor-SquadGame.dll"
    "./Squad/Binaries/Win64/UE4Editor.modules"
    "./Squad/Plugins/OffworldCore/ThirdParty/DiscordRPC/Source/ThirdParty/DiscordRpcLibrary/Win64/discord-rpc.dll"
    "./UnrealEngine/Engine/Source/Developer/Linux/LinuxTargetPlatform/LinuxTargetPlatform.Build.cs"
    "./UnrealEngine/Engine/Binaries/Win64/UnrealPak.exe"
    #files added to let editor boot
    "./UnrealEngine/Engine/Config/Android/AndroidEngine.ini"
    "./UnrealEngine/Engine/Config/Android/BaseAndroidEngine.ini"
    "./UnrealEngine/Engine/Config/Android/DataDrivenPlatformInfo.ini"
    "./UnrealEngine/Engine/Config/HTML5/DataDrivenPlatformInfo.ini"
    "./UnrealEngine/Engine/Config/HTML5/HTML5Engine.ini"
    "./UnrealEngine/Engine/Config/Lumin/DataDrivenPlatformInfo.ini"
    "./UnrealEngine/Engine/Config/Lumin/LuminEngine.ini"
    "./UnrealEngine/Engine/Config/TVOS/DataDrivenPlatformInfo.ini"
    "./UnrealEngine/Engine/Config/TVOS/TVOSEngine.ini"
    #files added to solve cooking error
    "./Squad/Source/SquadGame.Target.cs"
    "./Squad/Source/SquadGameEditor.Target.cs"
    "./Squad/Source/SquadGameServer.Target.cs"
)

#Paths containing these strings will be removed (except above whitelist)
declare -a blacklist=(
	"/UnreleasedStuff"
    ".clang-format"
    ".command"
    ".exp"
    ".filters"
    ".lib"
    ".mdb"
    ".p4config"
    ".p4ignore"
    ".pdb"
    ".sh"
    ".sln"
    ".so"
    ".sym"
    ".teamcity"
    ".vcxproj"
    ".xcodeproj"
    "/.vs/"
    "/.vscode/"
    "/Android/"
    "/Asset_Test/"
    "/Asset_Zoos/"
    "/Build/Android/"
    "/Build/IOS/"
    "./Build/"
    "/builder_osx/"
    "/CEF3/Linux/"
    "/CEF3/Win32/"
    "/CMake/"
    "/DeltaCopy/"
    "/DerivedDataCache/"
    "/Developers/"
    "/emsdk/"
    "/Engine/Documentation/"
    "Environments/EastAsia"
    "Environments/Military/USS_ESSEX"
	"Environments/Eastern_European/3rdPartyContent"
    "Environments/Vegitation/3rdPartyContent"
    "Environments/BlackCoast"
    "/Environments/MiddleEast/3rdPartyContent"
    "/Environments/MiddleEast/Buildings/Outskirts/Blockouts/"
    "/Environments/MiddleEast/Buildings/UrbanCenter/Blockouts"
    "/GNU_Make/"
    "/HTML5/"
    "/Jenkins/"
    "/Intermediate/"
    "/LeapMotion/"
    "/Lumin/"
    "/Maps/Sanxian_Islands"
    "/Maps/Haiyan"
    "/Maps/Harju"
    "/Maps/Black_Coast"
    "/Maya_AnimationRiggingTools/"
    "/Mods/"
    "/Mono/Linux/"
    "/Mono/Mac/"
    "/NVAnselSDK/include/"
    "/OnlineSubsystemAmazon/"
    "/OnlineSubsystemFacebook/"
    "/OnlineSubsystemIOS/"
    "/OnlineSubsystemOculus/"
    "/PerformanceTestMap/"
    "Expansions/BlackCoast"
    "Expansions/Harju"
    "/Saved/"
    "/Saved_uat/"
    "/Source/"
    "/Squad/Build/"
    "/Squad/CI"
    "/Squad/Content/CoreState/Packs/"
    "/Squad/Steam/"
    "/Squad/Tools/"
    "/Squad/build.cmd"
    "/svn/"
    "/TVOS/"
    "/UnrealEngine/FeaturePacks/"
    "/UnrealEngine/Samples/"
    "/UnrealEngine/Templates/"
    "/Vrpn/Include/"
    "CHECKED_x64"
    "CHECKED_x86"
    "CompoundTests"
    "DefaultCrypto.ini"
    "Fallujah_Blockout_sharedassets"
    "Fallujah_Blockout"
    "Fallujah_test"
    "Fallujah_VisualSlice"
    "FGM148"
    "GenerateProjectFiles.bat"
    "GenerateProjectFiles.sh"
    "Log_UHT.txt"
    "Log.txt"
    "m16a4"
    "M16a4"
    "M16A4"
    "M27_iar"
    "M27_IAR"
    "PR_Ref"
    "Setup.bat"
    "Setup.sh"
    "SquadGame-Win64-Development"
    "SquadGameServer-Win64-Development"
    "SquadGameServer-Linux-Development"
    "UnrealEngine/Engine/Binaries/Linux"
    "TransferLevel"
    "Unreleased"
    "USMC"
    "WIP_layout"
    $outputfilename
)

#remove lines containing the above strings
for i in "${blacklist[@]}"
do
    #escape slashes and dots for sed
    var=$(echo "$i" | sed 's/\//\\\//g' | sed 's/[.]/\\./g')
    echo "Removing lines with $var"
    sed -i "/$var/d" $outputfilename
done

#add back files from whitelist
for i in "${whitelist[@]}"
do
    echo "$i" >> $outputfilename
    echo "Adding file $i"
done

#Example: copy the whitelisted files into staging directory with rsync
#rsync -av --no-perms --progress --files-from=whitelist.txt ./ /d/modsdk_staging/